version: '3.8'

services:
 app:
  ports:
   - 8000:8000
  restart: always
  build: ./api
  command: /app/main
  depends_on:
   - db
   - kafka


  environment:
   - DB_PASSWORD=postgres

 migrate:
  image: arigaio/atlas:latest
  restart: on-failure
  command: >
   migrate apply 1
   --url "postgresql://postgres:postgres@db:5432/postgres?search_path=public&sslmode=disable"
  depends_on:
   - db
  volumes:
   - ./db/postgresql/migrations/:/migrations


 db:
  restart: always
  image: postgres:latest
  volumes:
   - ./db/postgresql/.database/postgres/data:/var/lib/postgresql/data
  environment:
   - POSTGRES_PASSWORD=postgres
   - POSTGRES_USER=postgres
  ports:
   - 5436:5432

 image:
  restart: always
  build: ./imageGeneration
  depends_on:
   - kafka
   - db


 kafka:
  restart: always
  image: confluentinc/cp-kafka:latest
  ports:
   - 29092:29092
  expose:
   - 9092
  environment:
   KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
   KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
   KAFKA_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://0.0.0.0:29092
   KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:29092"
   KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  depends_on:
   - zookeeper

 zookeeper:
  restart: always
  image: zookeeper
  ports:
   - "2181:2181"

 nginx:
  image: nginx:latest
  ports:
   - 80:80
  volumes:
   - ./nginx/conf.d:/etc/nginx/conf.d
  depends_on:
   - app
  restart: always

 prometheus:
  restart: always
  image: prom/prometheus:latest
  ports:
   - "9090:9090"
  volumes:
   - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml


 grafana:
  restart: always
  image: grafana/grafana:latest
  ports:
   - "3003:3000"
  volumes:
   - ./grafana/provisioning:/etc/grafana/provisioning
   - ./grafana/datasources:/etc/grafana/provisioning/datasources

  environment:
   - GF_AUTH_ANONYMOUS_ENABLED=true
   - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
  depends_on:
   - prometheus
  links:
   - prometheus

 k6:
  image: grafana/k6:latest
  profiles: ["k6"]
  command: run --vus 100 --duration 1h --rps 100 /test.js
  volumes:
   - ./test.js:/test.js

networks:
 my-network:
  driver: bridge